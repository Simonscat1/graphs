{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const usePosition = () => {\n  _s();\n\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = _ref => {\n    let {\n      latitude,\n      longitude\n    } = _ref;\n    // Здесь мы могли бы сохранить весь объект position, но для\n    // ясности давайте явно перечислим, какие свойства нас интересуют.\n    setPosition({\n      latitude,\n      longitude\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = navigator.geolocation;\n\n    if (!geo) {\n      setError('Геолокация не поддерживается браузером');\n      return;\n    } // Подписываемся на изменение геопозиции браузера.\n\n\n    watcher = geo.watchPosition(onChange, onError); // В случае, если компонент будет удаляться с экрана\n    // производим отписку от слежки, чтобы не засорять память.\n\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return { ...position,\n    error\n  };\n};\n\n_s(usePosition, \"dynHhIjHiH1gzjmYywOPM1LY5S8=\");","map":{"version":3,"names":["useState","useEffect","usePosition","position","setPosition","error","setError","onChange","latitude","longitude","onError","message","geo","navigator","geolocation","watcher","watchPosition","clearWatch"],"sources":["C:/Users/kazak/Desktop/graphs/client/src/usePosition.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport const usePosition = () => {\r\n  const [position, setPosition] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  const onChange = ({latitude, longitude}) => {\r\n    // Здесь мы могли бы сохранить весь объект position, но для\r\n    // ясности давайте явно перечислим, какие свойства нас интересуют.\r\n    setPosition({latitude, longitude});\r\n  };\r\n\r\n  const onError = (error) => {\r\n    setError(error.message);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const geo = navigator.geolocation;\r\n\r\n    if (!geo) {\r\n      setError('Геолокация не поддерживается браузером');\r\n      return;\r\n    }\r\n\r\n    // Подписываемся на изменение геопозиции браузера.\r\n    watcher = geo.watchPosition(onChange, onError);\r\n\r\n    // В случае, если компонент будет удаляться с экрана\r\n    // производим отписку от слежки, чтобы не засорять память.\r\n    return () => geo.clearWatch(watcher);\r\n  }, []);\r\n\r\n  return {...position, error};\r\n}"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;EAAA;;EAC/B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMO,QAAQ,GAAG,QAA2B;IAAA,IAA1B;MAACC,QAAD;MAAWC;IAAX,CAA0B;IAC1C;IACA;IACAL,WAAW,CAAC;MAACI,QAAD;MAAWC;IAAX,CAAD,CAAX;EACD,CAJD;;EAMA,MAAMC,OAAO,GAAIL,KAAD,IAAW;IACzBC,QAAQ,CAACD,KAAK,CAACM,OAAP,CAAR;EACD,CAFD;;EAIAV,SAAS,CAAC,MAAM;IACd,MAAMW,GAAG,GAAGC,SAAS,CAACC,WAAtB;;IAEA,IAAI,CAACF,GAAL,EAAU;MACRN,QAAQ,CAAC,wCAAD,CAAR;MACA;IACD,CANa,CAQd;;;IACAS,OAAO,GAAGH,GAAG,CAACI,aAAJ,CAAkBT,QAAlB,EAA4BG,OAA5B,CAAV,CATc,CAWd;IACA;;IACA,OAAO,MAAME,GAAG,CAACK,UAAJ,CAAeF,OAAf,CAAb;EACD,CAdQ,EAcN,EAdM,CAAT;EAgBA,OAAO,EAAC,GAAGZ,QAAJ;IAAcE;EAAd,CAAP;AACD,CA/BM;;GAAMH,W"},"metadata":{},"sourceType":"module"}